<templateSet group="JavaScript">
  <template name="react" value="import React, {PureComponent} from 'react';&#10;&#10;class $name$ extends PureComponent {&#10;    constructor(props){&#10;        super(props);&#10;        &#10;    }&#10;&#10;    render(){&#10;    &#10;    }&#10;}&#10;&#10;export default $name$;" description="react compoennt" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="reactcomp" value="import React from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;const $Comp$ = ({}) =&gt; {&#10;&#10;};&#10;&#10;$Comp$.propTypes = {};&#10;&#10;$Comp$.defaultProps = {};&#10;&#10;export default $Comp$;" description="React Component" toReformat="false" toShortenFQNames="true">
    <variable name="Comp" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="reactcont" value="import React from 'react';&#10;import { connect } from 'react-redux';&#10;&#10;const mapStateToProps = ({}) =&gt; {&#10;&#10;};&#10;&#10;const mapDispatchToProps = (dispatch) =&gt; ({&#10;&#10;});&#10;&#10;const $Comp$Container = connect(mapStateToProps, mapDispatchToProps)($Comp$);&#10;&#10;export default $Comp$Container;" description="React Container" toReformat="true" toShortenFQNames="true">
    <variable name="Comp" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>